definitions:
  ###### TODO: PROJECT SPECIFIC SETUP ######
  bundle_identifier: &bundle_identifier
    com.example.projectTemplate # TODO: put your bundle identifier here
  ios_vars: &ios_vars
    APP_ID: 1111111111 # <--TODO: Put your APP ID here

  # TODO: IF YOU WANT TO BUILD WEB AS WELL, ADD THE SCRIPT TO THE WORKFLOW AND THE ARTIFACTS TO THE ARTIFACTS SECTION



  ##### ENVIRONMENT SETUP #####
  instance_mac_mini_m1: &instance_mac_mini_m1
    instance_type: mac_mini_m1
    max_build_duration: 60
  env_versions: &env_versions
    flutter: fvm
    xcode: latest
    cocoapods: default
  dependency_caches: &dependency_caches
    cache:
      cache_paths:
        - $HOME/.gradle/caches
        - $FLUTTER_ROOT/.pub-cache
        - $HOME/Library/Caches/CocoaPods

# TODO: conditional scripts: e.g. bool whether to build web, bool whether to run build_runner etc.


  ##### SCRIPTS SETUP #####
  add_certs_to_keychain: &add_certs_to_keychain
    name: Add certificates to keychain
    script: |
        keychain initialize && keychain add-certificates
  flutter_android_setup: &flutter_android_setup
    name: Set up local.properties
    script: |
        echo "flutter.sdk=$HOME/programs/flutter" > "$CM_BUILD_DIR/android/local.properties"
  flutter_ios_provisioning_setup: &flutter_ios_provisioning_setup
    name: Set up code signing settings on Xcode project
    script: |
        xcode-project use-profiles
  pub_get: &pub_get
    name: Get Flutter packages
    script: |
        flutter packages pub get
  dart_format: &dart_format
    name: Verify formatting
    script: |
        dart format --output=none --set-exit-if-changed .
  install_pods: &install_pods
    name: Install pods
    script: |
        find . -name "Podfile" -execdir pod install \;
  flutter_analyze: &flutter_analyze
    name: Flutter analyze
    script: |
        flutter analyze
  flutter_test: &flutter_test
    name: Flutter unit tests
    script: |
        flutter test
    ignore_failure: false
  build_android_no_google: &build_android_no_google
    name: Build Android AAB and APK
    script: |    
        flutter build appbundle --release \
        --build-name=1.0.$PROJECT_BUILD_NUMBER \
        --build-number=$PROJECT_BUILD_NUMBER
        flutter build apk --release \
        --build-name=1.0.$PROJECT_BUILD_NUMBER \
        --build-number=$PROJECT_BUILD_NUMBER
  build_ios_no_app_store_connect: &build_ios_no_app_store_connect
    name: Build iOS
    script: |
        flutter build ipa --release \
          --build-name=1.0.$PROJECT_BUILD_NUMBER \
          --build-number=$PROJECT_BUILD_NUMBER \
          --export-options-plist=/Users/builder/export_options.plist
  build_android: &build_android
    name: Flutter build AAB and APK
    script: |
        BUILD_NUMBER=$(($(google-play get-latest-build-number --package-name "$PACKAGE_NAME" --tracks="$GOOGLE_PLAY_TRACK") + 1))      
        flutter build appbundle --release \
          --build-name=1.0.$BUILD_NUMBER \
          --build-number=$BUILD_NUMBER
        flutter build apk --release \
          --build-name=1.0.$BUILD_NUMBER \
          --build-number=$BUILD_NUMBER
  # build_ios: &build_ios
  #   name: Flutter build ipa and automatic versioning
  #   script: |
  #       flutter build ipa --release \
  #         --build-name=1.0.0 \
  #         --build-number=$(($(app-store-connect get-latest-app-store-build-number "$APP_ID") + 1)) \
  #         --export-options-plist=/Users/builder/export_options.plist
  build_web_release: &build_web_release
    name: Flutter build web
    script: |
        flutter build web --release
        cd build/web
        7z a -r ../web.zip ./*
#   android_signing: &android_signing
#     android_signing:
#         - keystore_reference
#   android_vars: &android_vars
#     PACKAGE_NAME: *bundle_identifier # 
#     GOOGLE_PLAY_TRACK: "alpha"

  default_artifacts: &default_artifacts
    artifacts:
      - build/**/outputs/**/*.aab
      - build/**/outputs/**/*.apk
      - build/**/outputs/**/mapping.txt
      - build/ios/ipa/*.ipa
      - /tmp/xcodebuild_logs/*.log
      - build/web.zip # TODO: REMOVE THIS, IF YOU DO NOT WANT TO BUILD WEB
    # - flutter_drive.log #TODO: needed? 
    # - flutter_drive.log #TODO: needed?
#   ios_signing: &ios_signing
#     ios_signing:
#       distribution_type: app_store
#       bundle_identifier: *bundle_identifier
#   test_flight_setup: &test_flight_setup
#     app_store_connect:
#       auth: integration
#       # Configuration related to TestFlight (optional)
#       # Note: This action is performed during post-processing.
#       submit_to_testflight: true
#       beta_groups: # Specify the names of beta tester groups that will get access to the build once it has passed beta review.
#         - group name 1 # TODO: specify groups here
#         - group name 2
#       # Configuration related to App Store (optional)
#       # Note: This action is performed during post-processing.
#       submit_to_app_store: false
#   app_store_setup: &app_store_setup
#     app_store_connect:
#       auth: integration
#       # Configuration related to TestFlight (optional)
#       # Note: This action is performed during post-processing.
#       submit_to_testflight: false
#       # Configuration related to App Store (optional)
#       # Note: This action is performed during post-processing.
#       submit_to_app_store: true
#   google_play_draft_setup: &google_play_draft_setup
#     google_play:
#       credentials: $GCLOUD_SERVICE_ACCOUNT_CREDENTIALS
#       track: $GOOGLE_PLAY_TRACK
#       submit_as_draft: true
#   google_play_setup: &google_play_setup
#     google_play:
#       credentials: $GCLOUD_SERVICE_ACCOUNT_CREDENTIALS
#       track: $GOOGLE_PLAY_TRACK
#       submit_as_draft: false


#   ##### TODO: SETUP THE NOTIFICATIONS FOR THE WORKFLOWS #####

  email_notification_setup: &email_notification_setup
    email:
      recipients:
        - julien@neon.dev
      notify:
        success: true # To receive a notification when a build succeeds
        failure: false # To not receive a notification when a build fails
#   slack_notification_setup: &slack_notification_setup
#     slack:
#       # See the following link about how to connect your Slack account - https://docs.codemagic.io/publishing-yaml/distribution/#slack
#       channel: "#builds"
#       notify_on_build_start: true # To receive a notification when a build starts
#       notify:
#         success: true # To receive a notification when a build succeeds
#         failure: false # To not receive a notification when a build fails

workflows:
  main: 
    # tests, builds and submits to App Store Review
    name: Main Pipeline
    <<: *instance_mac_mini_m1
    environment:
      <<: *env_versions
    <<: *dependency_caches
    triggering: 
      # Trigger the workflow on pushes to the main branch
      events:  
        - push
      branch_patterns:
        - pattern: 'main'
      cancel_previous_builds: true
    scripts: 
      - *flutter_android_setup
      - *flutter_ios_provisioning_setup
      - *pub_get
      - *dart_format
      - *install_pods
      - *flutter_analyze
      - *flutter_test
  
  pr:
    # tests and builds pull requests
    name: Pull Request Pipeline
    <<: *instance_mac_mini_m1
    environment:
      ios_signing:
        provisioning_profiles:
          - playground
        certificates:
          - playground
      <<: *env_versions
    <<: *dependency_caches
    triggering:
      # Trigger the workflow on pull requests targeting any branch
      events:  
        - pull_request
      # Trigger the workflow on pull requests targeting the dev branch
      # branch_patterns:
      #   - pattern: 'dev*'
      #   - source: false
      cancel_previous_builds: true
    scripts:
      - *add_certs_to_keychain
      - *flutter_ios_provisioning_setup # TODO: automatic code signing, aus dem app store connect iwie ziezhen
      - *pub_get
      - *dart_format
      - *install_pods
      - *flutter_analyze
      - *flutter_test
      - *build_android_no_google
      - *build_ios_no_app_store_connect
      - *build_web_release # TODO: REMOVE THIS, IF YOU DO NOT WANT TO BUILD WEB
    <<: *default_artifacts
    publishing:
      <<: *email_notification_setup
#   pr:
#     # tests and builds pull requests
#     name: Pull Request Pipeline
#     <<: *instance_mac_mini_m1
#     environment:
#       groups:
#         - keystore_credentials
#         - app_store_credentials
#         - google_play # <-- (Includes GCLOUD_SERVICE_ACCOUNT_CREDENTIALS) #TODO: wann muss der sein?
#       <<: *android_signing
#       <<: *ios_signing
#       vars:
#        <<: *android_vars
#        <<: *ios_vars
#     <<: *env_versions
#     <<: *dependency_caches
#     triggering:
#       # Trigger the workflow on pull requests targeting any branch
#       events:  
#         - pull_request
#       # Trigger the workflow on pull requests targeting the dev branch
#       # branch_patterns:
#       #   - pattern: 'dev*'
#       #   - source: false
#     scripts:
#       <<: *flutter_setup
#       <<: *build_android
#       <<: *build_ios
#       <<: *build_web
#     artifacts:
#       <<: *android_artifacts
#       <<: *ios_artifacts
#       <<: *web_artifacts
#     publishing:
#       <<: *test_flight_setup 
#       <<: *email_notification_setup
#       <<: *slack_notification_setup


#   dev:
#     # tests, builds and submits to TestFlight
#     name: Dev Pipeline
#     <<: *instance_mac_mini_m1
#     environment:
#       groups:
#         - keystore_credentials
#         - app_store_credentials
#     <<: *env_versions
#     <<: *dependency_caches
#     triggering:
#       # Trigger the workflow on pushes to the dev branch
#       events:  
#         - push
#       branch_patterns:
#         - pattern: 'dev'









################# RESEARCH #####################
# workflows:
#   android-workflow:
#     name: Android Workflow
#     instance_type: mac_mini_m1
#     max_build_duration: 120
#     environment:
#       android_signing:
#         - keystore_reference
#       groups:
#         - google_play # <-- (Includes GCLOUD_SERVICE_ACCOUNT_CREDENTIALS)
#       vars:
#         PACKAGE_NAME: "io.codemagic.flutteryaml" # <-- Put your package name here
#         GOOGLE_PLAY_TRACK: "alpha"
#       flutter: stable
#     scripts:
#       - name: Set up local.properties
#         script: |
#           echo "flutter.sdk=$HOME/programs/flutter" > "$CM_BUILD_DIR/android/local.properties"
#       - name: Get Flutter packages
#         script: |
#           flutter packages pub get
#       - name: Flutter analyze
#         script: |
#           flutter analyze
#       - name: Flutter unit tests
#         script: |
#           flutter test
#         ignore_failure: true
#       - name: Build AAB with Flutter
#         script: |
#           BUILD_NUMBER=$(($(google-play get-latest-build-number --package-name "$PACKAGE_NAME" --tracks="$GOOGLE_PLAY_TRACK") + 1))      
#           flutter build appbundle --release \
#             --build-name=1.0.$BUILD_NUMBER \
#             --build-number=$BUILD_NUMBER
#     artifacts:
#       - build/**/outputs/**/*.aab
#       - build/**/outputs/**/mapping.txt
#       - flutter_drive.log
#     publishing:
#       email:
#         recipients:
#           - user_1@example.com
#           - user_2@example.com
#         notify:
#           success: true
#           failure: false
#       google_play:
#         credentials: $GCLOUD_SERVICE_ACCOUNT_CREDENTIALS
#         track: $GOOGLE_PLAY_TRACK
#         submit_as_draft: true
#   ios-workflow:
#     name: iOS Workflow
#     instance_type: mac_mini_m1
#     max_build_duration: 120
#     integrations:
#       app_store_connect: codemagic
#     environment:
#       ios_signing:
#         distribution_type: app_store
#         bundle_identifier: io.codemagic.flutteryaml
#       vars:
#         APP_ID: 1111111111 # <-- Put your APP ID here
#       flutter: stable
#       xcode: latest
#       cocoapods: default
#     scripts:
#       - name: Set up code signing settings on Xcode project
#         script: |
#           xcode-project use-profiles
#       - name: Get Flutter packages
#         script: |
#           flutter packages pub get
#       - name: Install pods
#         script: |
#           find . -name "Podfile" -execdir pod install \;
#       - name: Flutter analyze
#         script: |
#           flutter analyze
#       - name: Flutter unit tests
#         script: |
#           flutter test
#         ignore_failure: true
#       - name: Flutter build ipa and automatic versioning
#         script: |
#           flutter build ipa --release \
#             --build-name=1.0.0 \
#             --build-number=$(($(app-store-connect get-latest-app-store-build-number "$APP_ID") + 1)) \
#             --export-options-plist=/Users/builder/export_options.plist
#     artifacts:
#       - build/ios/ipa/*.ipa
#       - /tmp/xcodebuild_logs/*.log
#       - flutter_drive.log
#     publishing:
#       # See the following link for details about email publishing - https://docs.codemagic.io/publishing-yaml/distribution/#email
#       email:
#         recipients:
#           - user_1@example.com
#           - user_2@example.com
#         notify:
#           success: true # To receive a notification when a build succeeds
#           failure: false # To not receive a notification when a build fails
#       slack:
#         # See the following link about how to connect your Slack account - https://docs.codemagic.io/publishing-yaml/distribution/#slack
#         channel: "#builds"
#         notify_on_build_start: true # To receive a notification when a build starts
#         notify:
#           success: true # To receive a notification when a build succeeds
#           failure: false # To not receive a notification when a build fails
#       app_store_connect:
#         auth: integration
        
#         # Configuration related to TestFlight (optional)
#         # Note: This action is performed during post-processing.
#         submit_to_testflight: true
#         beta_groups: # Specify the names of beta tester groups that will get access to the build once it has passed beta review.
#           - group name 1
#           - group name 2

#         # Configuration related to App Store (optional)
#         # Note: This action is performed during post-processing.
#         submit_to_app_store: false

#   web-workflow:
#     name: Web app workflow
#     max_build_duration: 10
#     environment:
#       flutter: stable
#     scripts:
#       - name: Get Flutter packages
#         script: |
#           flutter packages pub get
#       - name: Flutter analyze
#         script: |
#           flutter analyze
#       - name: Flutter unit tests
#         script: |
#           flutter test
#       - name: Flutter build webapp
#         script: |
#           flutter build web --release
#           cd build/web
#           7z a -r ../web.zip ./*
#     artifacts:
#       - build/web.zip
#       - flutter_drive.log
#     publishing:
#       email:
#         recipients:
#           - user_1@example.com